{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shreyvijayvargiya/Desktop/Project/Web-Code-Editor/pages/_document.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable @next/next/next-script-for-ga */\nimport React from \"react\";\nimport Document, { Html, Head, Main, NextScript } from \"next/document\";\nimport createEmotionCache from \"utils/config/emotionCache\";\nimport createEmotionServer from \"@emotion/server/create-instance\";\nexport default class MyDocument extends Document {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Html, {\n      lang: \"en\",\n      children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        style: {\n          margin: 0,\n          WebkitFontSmoothing: \"antialiased\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(NextScript, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nMyDocument.getInitialProps = async ctx => {\n  const originalRenderPage = ctx.renderPage;\n  const cache = createEmotionCache();\n  const {\n    extractCriticalToChunks\n  } = createEmotionServer(cache);\n\n  ctx.renderPage = () => originalRenderPage({\n    enhanceApp: App => function EnhanceApp(props) {\n      return /*#__PURE__*/_jsxDEV(App, _objectSpread({\n        emotionCache: cache\n      }, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this);\n    }\n  });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  const emotionStyles = extractCriticalToChunks(initialProps.html);\n  const emotionStyleTags = emotionStyles.styles.map(style => /*#__PURE__*/_jsxDEV(\"style\", {\n    \"data-emotion\": `${style.key} ${style.ids.join(\" \")}`,\n    dangerouslySetInnerHTML: {\n      __html: style.css\n    }\n  }, style.key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this));\n  return _objectSpread(_objectSpread({}, initialProps), {}, {\n    emotionStyleTags\n  });\n};","map":{"version":3,"sources":["/Users/shreyvijayvargiya/Desktop/Project/Web-Code-Editor/pages/_document.js"],"names":["React","Document","Html","Head","Main","NextScript","createEmotionCache","createEmotionServer","MyDocument","constructor","render","margin","WebkitFontSmoothing","getInitialProps","ctx","originalRenderPage","renderPage","cache","extractCriticalToChunks","enhanceApp","App","EnhanceApp","props","initialProps","emotionStyles","html","emotionStyleTags","styles","map","style","key","ids","join","__html","css"],"mappings":";;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;AAEA,eAAe,MAAMC,UAAN,SAAyBP,QAAzB,CAAkC;AAChDQ,EAAAA,WAAW,GAAG;AACb;AACA;;AACDC,EAAAA,MAAM,GAAG;AACR,wBACC,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA,8BACC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AACC,QAAA,KAAK,EAAE;AACNC,UAAAA,MAAM,EAAE,CADF;AAENC,UAAAA,mBAAmB,EAAE;AAFf,SADR;AAAA,gCAMC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBAND,eAOC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAPD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAcA;;AAnB+C;;AAsBjDJ,UAAU,CAACK,eAAX,GAA6B,MAAOC,GAAP,IAAe;AAC3C,QAAMC,kBAAkB,GAAGD,GAAG,CAACE,UAA/B;AACA,QAAMC,KAAK,GAAGX,kBAAkB,EAAhC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAA8BX,mBAAmB,CAACU,KAAD,CAAvD;;AAEAH,EAAAA,GAAG,CAACE,UAAJ,GAAiB,MAChBD,kBAAkB,CAAC;AAClBI,IAAAA,UAAU,EAAGC,GAAD,IACX,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAC1B,0BAAO,QAAC,GAAD;AAAK,QAAA,YAAY,EAAEL;AAAnB,SAA8BK,KAA9B;AAAA;AAAA;AAAA;AAAA,cAAP;AACA;AAJgB,GAAD,CADnB;;AAQA,QAAMC,YAAY,GAAG,MAAMtB,QAAQ,CAACY,eAAT,CAAyBC,GAAzB,CAA3B;AACA,QAAMU,aAAa,GAAGN,uBAAuB,CAACK,YAAY,CAACE,IAAd,CAA7C;AACA,QAAMC,gBAAgB,GAAGF,aAAa,CAACG,MAAd,CAAqBC,GAArB,CAA0BC,KAAD,iBACjD;AACC,oBAAe,GAAEA,KAAK,CAACC,GAAI,IAAGD,KAAK,CAACE,GAAN,CAAUC,IAAV,CAAe,GAAf,CAAoB,EADnD;AAGC,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEJ,KAAK,CAACK;AAAhB;AAH1B,KAEML,KAAK,CAACC,GAFZ;AAAA;AAAA;AAAA;AAAA,UADwB,CAAzB;AAQA,yCACIP,YADJ;AAECG,IAAAA;AAFD;AAIA,CA3BD","sourcesContent":["/* eslint-disable @next/next/next-script-for-ga */\nimport React from \"react\";\nimport Document, { Html, Head, Main, NextScript } from \"next/document\";\nimport createEmotionCache from \"utils/config/emotionCache\";\nimport createEmotionServer from \"@emotion/server/create-instance\";\n\nexport default class MyDocument extends Document {\n\tconstructor() {\n\t\tsuper();\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Html lang=\"en\">\n\t\t\t\t<Head>{/* Add your meta tags here */}</Head>\n\t\t\t\t<body\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tWebkitFontSmoothing: \"antialiased\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Main />\n\t\t\t\t\t<NextScript />\n\t\t\t\t</body>\n\t\t\t</Html>\n\t\t);\n\t}\n}\n\nMyDocument.getInitialProps = async (ctx) => {\n\tconst originalRenderPage = ctx.renderPage;\n\tconst cache = createEmotionCache();\n\tconst { extractCriticalToChunks } = createEmotionServer(cache);\n\n\tctx.renderPage = () =>\n\t\toriginalRenderPage({\n\t\t\tenhanceApp: (App) =>\n\t\t\t\tfunction EnhanceApp(props) {\n\t\t\t\t\treturn <App emotionCache={cache} {...props} />;\n\t\t\t\t},\n\t\t});\n\n\tconst initialProps = await Document.getInitialProps(ctx);\n\tconst emotionStyles = extractCriticalToChunks(initialProps.html);\n\tconst emotionStyleTags = emotionStyles.styles.map((style) => (\n\t\t<style\n\t\t\tdata-emotion={`${style.key} ${style.ids.join(\" \")}`}\n\t\t\tkey={style.key}\n\t\t\tdangerouslySetInnerHTML={{ __html: style.css }}\n\t\t/>\n\t));\n\n\treturn {\n\t\t...initialProps,\n\t\temotionStyleTags,\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}