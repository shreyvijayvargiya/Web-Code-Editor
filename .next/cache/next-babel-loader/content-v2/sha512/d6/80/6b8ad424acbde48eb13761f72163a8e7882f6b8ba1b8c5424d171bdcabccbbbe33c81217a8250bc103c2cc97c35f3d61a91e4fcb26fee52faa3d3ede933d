{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shreyvijayvargiya/Desktop/Project/Web-Code-Editor/modules/DirectoryView.jsx/DirectoryTree.jsx\";\nimport React, { useState } from \"react\";\nimport { TreeView, TreeItem } from \"@mui/lab\";\nimport { makeStyles } from \"@mui/styles\";\nimport { CloseFolderIcon, OutlineRightIcon, CloseIcon, FileIconByName } from \"modules/UI/Icons\";\nimport { AiFillFolderOpen, AiFillFolder } from \"react-icons/ai\";\nimport { addActiveFile, addActiveFiles } from \"redux/slice\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch, batch } from \"react-redux\";\nimport colors from \"utils/config/colors\";\n\nconst DirectoryTree = ({\n  repoTree,\n  expanded,\n  setExpanded,\n  selected,\n  setSelected\n}) => {\n  const {\n    activeFile,\n    activeFiles\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const styles = useStyles();\n  const {\n    0: hoverId,\n    1: setHoverId\n  } = useState(null);\n\n  const handleToggle = (event, nodeIds) => {\n    setExpanded(nodeIds);\n  };\n\n  const handleSelect = (event, nodeIds) => {\n    setSelected(nodeIds);\n  };\n\n  const openFileInEditor = name => {\n    batch(() => {\n      let data = [...activeFiles];\n\n      if (!data.includes(name)) {\n        data.push(name);\n      }\n\n      dispatch(addActiveFile(name));\n      dispatch(addActiveFiles(data));\n    });\n  };\n\n  const removeFile = name => {\n    function removeNodeByName(node) {\n      if (!node || !node.children) {\n        return false;\n      }\n\n      const index = node.children.findIndex(child => (child === null || child === void 0 ? void 0 : child.name) === name);\n\n      if (index > -1) {\n        node.children.splice(index, 1);\n        return true;\n      }\n\n      for (const child of node.children) {\n        if (removeNodeByName(child, name)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    let tree = repoTree;\n    removeNodeByName(tree);\n  };\n\n  const removeDir = name => {\n    function removeDirectory(tree) {\n      if (tree.children) {\n        tree.children = tree === null || tree === void 0 ? void 0 : tree.children.filter(node => {\n          if (node.kind === \"directory\" && node.name === name) {\n            return false;\n          } else {\n            return removeDirectory(node);\n          }\n        });\n      }\n\n      return tree;\n    }\n\n    let tree = repoTree;\n    removeDirectory(tree);\n  };\n\n  const DirectoryTreeComponent = ({\n    tree\n  }) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: (tree === null || tree === void 0 ? void 0 : tree.children) && (tree === null || tree === void 0 ? void 0 : tree.children.map((item, index) => {\n        if (item.kind === \"file\") return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex justify-between items-center cursor-pointer text-gray-400 hover:text-gray-200 pl-8 my-1 ${activeFile === item.name ? \"bg-gray-800\" : \"bg-gray-900\"}`,\n          onMouseEnter: () => setHoverId(item.name),\n          onMouseLeave: () => setHoverId(null),\n          onClick: e => {\n            e.preventDefault();\n            openFileInEditor(item.name);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-start items-center gap-1\",\n            children: [/*#__PURE__*/_jsxDEV(FileIconByName, {\n              name: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 10\n          }, this), hoverId === item.name && /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => removeFile(item.name),\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this)]\n        }, `${item.name}_${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this);else return /*#__PURE__*/_jsxDEV(TreeItem, {\n          nodeId: item.name,\n          onMouseEnter: () => setHoverId(item.name),\n          onMouseLeave: () => setHoverId(null),\n          label: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center w-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-start items-center gap-1\",\n              children: [expanded.includes(item.name) ? /*#__PURE__*/_jsxDEV(AiFillFolderOpen, {\n                size: 20,\n                color: colors.blue[400]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 14\n              }, this) : /*#__PURE__*/_jsxDEV(AiFillFolder, {\n                size: 20,\n                color: colors.blue[400]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 14\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: e => {\n                e.stopPropagation();\n                removeDir(item.name);\n              },\n              children: hoverId == item.name && /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }, this),\n          className: styles.folderItem,\n          children: /*#__PURE__*/_jsxDEV(DirectoryTreeComponent, {\n            tree: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 10\n          }, this)\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this);\n      }))\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TreeView, {\n    \"aria-label\": \"controlled\",\n    expanded: expanded,\n    selected: selected,\n    defaultCollapseIcon: /*#__PURE__*/_jsxDEV(CloseFolderIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }, this),\n    defaultExpandIcon: /*#__PURE__*/_jsxDEV(OutlineRightIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 23\n    }, this),\n    onNodeToggle: handleToggle,\n    onNodeSelect: handleSelect,\n    className: styles.directoryTree,\n    children: /*#__PURE__*/_jsxDEV(DirectoryTreeComponent, {\n      tree: repoTree\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 3\n  }, this);\n};\n\nexport default DirectoryTree;\nexport const useStyles = makeStyles(() => ({\n  folderItem: {\n    \"& .css-1kylpgj-MuiTreeItem-content.Mui-selected:hover\": {\n      backgroundColor: colors.gray[800]\n    },\n    \"& .css-1kylpgj-MuiTreeItem-content.Mui-selected\": {\n      backgroundColor: colors.gray[800]\n    }\n  },\n  directoryTree: {\n    padding: \"1rem\"\n  }\n}));","map":{"version":3,"sources":["/Users/shreyvijayvargiya/Desktop/Project/Web-Code-Editor/modules/DirectoryView.jsx/DirectoryTree.jsx"],"names":["React","useState","TreeView","TreeItem","makeStyles","CloseFolderIcon","OutlineRightIcon","CloseIcon","FileIconByName","AiFillFolderOpen","AiFillFolder","addActiveFile","addActiveFiles","useSelector","useDispatch","batch","colors","DirectoryTree","repoTree","expanded","setExpanded","selected","setSelected","activeFile","activeFiles","state","dispatch","styles","useStyles","hoverId","setHoverId","handleToggle","event","nodeIds","handleSelect","openFileInEditor","name","data","includes","push","removeFile","removeNodeByName","node","children","index","findIndex","child","splice","tree","removeDir","removeDirectory","filter","kind","DirectoryTreeComponent","map","item","e","preventDefault","blue","stopPropagation","folderItem","directoryTree","backgroundColor","gray","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TreeView, TreeItem } from \"@mui/lab\";\nimport { makeStyles } from \"@mui/styles\";\nimport {\n\tCloseFolderIcon,\n\tOutlineRightIcon,\n\tCloseIcon,\n\tFileIconByName,\n} from \"modules/UI/Icons\";\nimport { AiFillFolderOpen, AiFillFolder } from \"react-icons/ai\";\nimport { addActiveFile, addActiveFiles } from \"redux/slice\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch, batch } from \"react-redux\";\nimport colors from \"utils/config/colors\";\n\nconst DirectoryTree = ({\n\trepoTree,\n\texpanded,\n\tsetExpanded,\n\tselected,\n\tsetSelected,\n}) => {\n\tconst { activeFile, activeFiles } = useSelector((state) => state);\n\tconst dispatch = useDispatch();\n\tconst styles = useStyles();\n\tconst [hoverId, setHoverId] = useState(null);\n\n\tconst handleToggle = (event, nodeIds) => {\n\t\tsetExpanded(nodeIds);\n\t};\n\tconst handleSelect = (event, nodeIds) => {\n\t\tsetSelected(nodeIds);\n\t};\n\n\tconst openFileInEditor = (name) => {\n\t\tbatch(() => {\n\t\t\tlet data = [...activeFiles];\n\t\t\tif (!data.includes(name)) {\n\t\t\t\tdata.push(name);\n\t\t\t}\n\t\t\tdispatch(addActiveFile(name));\n\t\t\tdispatch(addActiveFiles(data));\n\t\t});\n\t};\n\n\tconst removeFile = (name) => {\n\t\tfunction removeNodeByName(node) {\n\t\t\tif (!node || !node.children) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst index = node.children.findIndex((child) => child?.name === name);\n\t\t\tif (index > -1) {\n\t\t\t\tnode.children.splice(index, 1);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tfor (const child of node.children) {\n\t\t\t\tif (removeNodeByName(child, name)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t\tlet tree = repoTree;\n\t\tremoveNodeByName(tree);\n\t};\n\n\tconst removeDir = (name) => {\n\t\tfunction removeDirectory(tree) {\n\t\t\tif (tree.children) {\n\t\t\t\ttree.children = tree?.children.filter((node) => {\n\t\t\t\t\tif (node.kind === \"directory\" && node.name === name) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn removeDirectory(node);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn tree;\n\t\t}\n\t\tlet tree = repoTree;\n\t\tremoveDirectory(tree);\n\t};\n\n\tconst DirectoryTreeComponent = ({ tree }) => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{tree?.children &&\n\t\t\t\t\ttree?.children.map((item, index) => {\n\t\t\t\t\t\tif (item.kind === \"file\")\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tkey={`${item.name}_${index}`}\n\t\t\t\t\t\t\t\t\tclassName={`flex justify-between items-center cursor-pointer text-gray-400 hover:text-gray-200 pl-8 my-1 ${\n\t\t\t\t\t\t\t\t\t\tactiveFile === item.name ? \"bg-gray-800\" : \"bg-gray-900\"\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\tonMouseEnter={() => setHoverId(item.name)}\n\t\t\t\t\t\t\t\t\tonMouseLeave={() => setHoverId(null)}\n\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\topenFileInEditor(item.name);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"flex justify-start items-center gap-1\">\n\t\t\t\t\t\t\t\t\t\t<FileIconByName name={item.name} />\n\t\t\t\t\t\t\t\t\t\t<p>{item.name}</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{hoverId === item.name && (\n\t\t\t\t\t\t\t\t\t\t<div onClick={() => removeFile(item.name)}>\n\t\t\t\t\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<TreeItem\n\t\t\t\t\t\t\t\t\tkey={item.name}\n\t\t\t\t\t\t\t\t\tnodeId={item.name}\n\t\t\t\t\t\t\t\t\tonMouseEnter={() => setHoverId(item.name)}\n\t\t\t\t\t\t\t\t\tonMouseLeave={() => setHoverId(null)}\n\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t<div className=\"flex justify-between items-center w-full\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex justify-start items-center gap-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t{expanded.includes(item.name) ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<AiFillFolderOpen\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize={20}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={colors.blue[400]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<AiFillFolder size={20} color={colors.blue[400]} />\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{item.name}</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t\t\t\t\t\t\tremoveDir(item.name);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{hoverId == item.name && <CloseIcon />}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tclassName={styles.folderItem}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<DirectoryTreeComponent tree={item} />\n\t\t\t\t\t\t\t\t</TreeItem>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t</>\n\t\t);\n\t};\n\treturn (\n\t\t<TreeView\n\t\t\taria-label=\"controlled\"\n\t\t\texpanded={expanded}\n\t\t\tselected={selected}\n\t\t\tdefaultCollapseIcon={<CloseFolderIcon />}\n\t\t\tdefaultExpandIcon={<OutlineRightIcon />}\n\t\t\tonNodeToggle={handleToggle}\n\t\t\tonNodeSelect={handleSelect}\n\t\t\tclassName={styles.directoryTree}\n\t\t>\n\t\t\t<DirectoryTreeComponent tree={repoTree} />\n\t\t</TreeView>\n\t);\n};\nexport default DirectoryTree;\n\nexport const useStyles = makeStyles(() => ({\n\tfolderItem: {\n\t\t\"& .css-1kylpgj-MuiTreeItem-content.Mui-selected:hover\": {\n\t\t\tbackgroundColor: colors.gray[800],\n\t\t},\n\t\t\"& .css-1kylpgj-MuiTreeItem-content.Mui-selected\": {\n\t\t\tbackgroundColor: colors.gray[800],\n\t\t},\n\t},\n\tdirectoryTree: {\n\t\tpadding: \"1rem\",\n\t},\n}));\n"]},"metadata":{},"sourceType":"module"}