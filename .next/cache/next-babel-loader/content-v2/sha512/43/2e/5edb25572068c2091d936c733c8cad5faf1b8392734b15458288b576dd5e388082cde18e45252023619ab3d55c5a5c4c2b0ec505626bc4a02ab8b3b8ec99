{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shreyvijayvargiya/Desktop/Project/Web-Code-Editor/modules/DirectoryView.jsx/index.jsx\";\nimport React, { useState } from \"react\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { TreeView, TreeItem } from \"@mui/lab\";\nimport { AiFillFolderAdd, AiFillFileAdd, AiFillFolder, AiFillFolderOpen } from \"react-icons/ai\";\nimport router from \"next/router\";\nimport { FileIconByName, CloseIcon, ExpandIcon, CollapseIcon, CloseFolderIcon, OutlineRightIcon } from \"../UI/Icons\";\nimport colors from \"utils/config/colors\";\nimport { useSelector, useDispatch, batch } from \"react-redux\";\nimport DirectoryTree from \"./DirectoryTree\";\n\nconst DirectoryView = () => {\n  const {\n    initialRepoTree\n  } = useSelector(state => state);\n  const styles = useStyles();\n  const {\n    0: expanded,\n    1: setExpanded\n  } = useState([]);\n  const {\n    0: repoTree,\n    1: setRepoTree\n  } = useState(initialRepoTree);\n  const {\n    0: selected,\n    1: setSelected\n  } = useState([]);\n\n  const handleToggle = (event, nodeIds) => {\n    setExpanded(nodeIds);\n  };\n\n  const handleSelect = (event, nodeIds) => {\n    setSelected(nodeIds);\n  };\n\n  const handleExpandClick = () => {\n    if (expanded.length === 0) {\n      let directories = [];\n\n      const getDirectorNames = tree => {\n        tree.children.filter(node => {\n          if (node.kind === \"directory\") {\n            directories.push(node.name);\n            getDirectorNames(node);\n          }\n        });\n      };\n\n      getDirectorNames(repoTree);\n      setExpanded(directories);\n    } else {\n      setExpanded([]);\n    }\n  };\n\n  const generateRandomName = extensionRequired => {\n    const randomString = Math.random().toString(36).substring(2, 8);\n    const extension = Math.random() < 0.5 ? \".txt\" : \".jsx\";\n    return `${extensionRequired ? randomString + extension : randomString}`;\n  };\n\n  const getParentNode = (currentNode, name) => {\n    if (!currentNode.children) {\n      return null;\n    }\n\n    for (const child of currentNode === null || currentNode === void 0 ? void 0 : currentNode.children) {\n      if (child.name === name) {\n        return currentNode;\n      } else {\n        const parentNode = getParentNode(child, name);\n\n        if (parentNode) {\n          return parentNode;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  const findTargetDir = (nodes, newNode) => {\n    nodes.children.forEach(node => {\n      if (node.name === selected && node.kind === \"directory\") {\n        var _node$children;\n\n        if (!node.children) {\n          node.children = [];\n        }\n\n        return node === null || node === void 0 ? void 0 : (_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children.push(newNode);\n      } else if (node.name !== selected && node.kind === \"directory\") {\n        findTargetDir(node, newNode);\n      } else if (node.name === selected && node.kind === \"file\") {\n        var _parentNode$children;\n\n        const parentNode = getParentNode(nodes, selected);\n\n        if (!parentNode.children) {\n          parentNode.children = [];\n        }\n\n        return parentNode === null || parentNode === void 0 ? void 0 : (_parentNode$children = parentNode.children) === null || _parentNode$children === void 0 ? void 0 : _parentNode$children.push(newNode);\n      }\n    });\n    return nodes;\n  };\n\n  const addFolder = () => {\n    const newFolder = {\n      name: generateRandomName(false),\n      kind: \"directory\",\n      children: []\n    };\n    let tree = repoTree;\n    const finalTree = findTargetDir(tree, newFolder);\n    setRepoTree(finalTree);\n  };\n\n  const addFile = () => {\n    const newFile = {\n      name: generateRandomName(true),\n      kind: \"file\",\n      modified: Date.now().toLocaleString(),\n      size: \"1KB\"\n    };\n    let tree = repoTree;\n    const finalTree = findTargetDir(tree, newFile);\n    setRepoTree(finalTree);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-gray-200 w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl cursor-pointer\",\n        onClick: () => router.push(\"/\"),\n        children: \"Repository\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center p-4 border-t border-b border-gray-800\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ignite Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-evenly items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Add file\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(AiFillFileAdd, {\n              size: 18,\n              color: colors.trueGray[400],\n              onClick: addFile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Add folder\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(AiFillFolderAdd, {\n              size: 18,\n              color: colors.trueGray[400],\n              onClick: addFolder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: expanded.length === 0 ? \"Expand\" : \"Collapse\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: handleExpandClick,\n            children: expanded.length === 0 ? /*#__PURE__*/_jsxDEV(ExpandIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(CollapseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4\",\n      children: /*#__PURE__*/_jsxDEV(DirectoryTree, {\n        repoTree: repoTree\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 3\n  }, this);\n};\n\nexport default DirectoryView;\nexport const useStyles = makeStyles(() => ({\n  folderItem: {\n    \"& .css-1kylpgj-MuiTreeItem-content.Mui-selected:hover\": {\n      backgroundColor: colors.gray[800]\n    },\n    \"& .css-1kylpgj-MuiTreeItem-content.Mui-selected\": {\n      backgroundColor: colors.gray[800]\n    }\n  },\n  directoryTree: {}\n}));","map":{"version":3,"sources":["/Users/shreyvijayvargiya/Desktop/Project/Web-Code-Editor/modules/DirectoryView.jsx/index.jsx"],"names":["React","useState","IconButton","Tooltip","makeStyles","TreeView","TreeItem","AiFillFolderAdd","AiFillFileAdd","AiFillFolder","AiFillFolderOpen","router","FileIconByName","CloseIcon","ExpandIcon","CollapseIcon","CloseFolderIcon","OutlineRightIcon","colors","useSelector","useDispatch","batch","DirectoryTree","DirectoryView","initialRepoTree","state","styles","useStyles","expanded","setExpanded","repoTree","setRepoTree","selected","setSelected","handleToggle","event","nodeIds","handleSelect","handleExpandClick","length","directories","getDirectorNames","tree","children","filter","node","kind","push","name","generateRandomName","extensionRequired","randomString","Math","random","toString","substring","extension","getParentNode","currentNode","child","parentNode","findTargetDir","nodes","newNode","forEach","addFolder","newFolder","finalTree","addFile","newFile","modified","Date","now","toLocaleString","size","trueGray","folderItem","backgroundColor","gray","directoryTree"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { TreeView, TreeItem } from \"@mui/lab\";\nimport {\n\tAiFillFolderAdd,\n\tAiFillFileAdd,\n\tAiFillFolder,\n\tAiFillFolderOpen,\n} from \"react-icons/ai\";\nimport router from \"next/router\";\nimport {\n\tFileIconByName,\n\tCloseIcon,\n\tExpandIcon,\n\tCollapseIcon,\n\tCloseFolderIcon,\n\tOutlineRightIcon,\n} from \"../UI/Icons\";\nimport colors from \"utils/config/colors\";\nimport { useSelector, useDispatch, batch } from \"react-redux\";\nimport DirectoryTree from \"./DirectoryTree\";\n\n\nconst DirectoryView = () => {\n\tconst { initialRepoTree } = useSelector(\n\t\t(state) => state\n\t);\n\tconst styles = useStyles();\n\tconst [expanded, setExpanded] = useState([]);\n\tconst [repoTree, setRepoTree] = useState(initialRepoTree);\n\tconst [selected, setSelected] = useState([]);\n\n\tconst handleToggle = (event, nodeIds) => {\n\t\tsetExpanded(nodeIds);\n\t};\n\tconst handleSelect = (event, nodeIds) => {\n\t\tsetSelected(nodeIds);\n\t};\n\n\tconst handleExpandClick = () => {\n\t\tif (expanded.length === 0) {\n\t\t\tlet directories = [];\n\t\t\tconst getDirectorNames = (tree) => {\n\t\t\t\ttree.children.filter((node) => {\n\t\t\t\t\tif (node.kind === \"directory\") {\n\t\t\t\t\t\tdirectories.push(node.name);\n\t\t\t\t\t\tgetDirectorNames(node);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\tgetDirectorNames(repoTree);\n\t\t\tsetExpanded(directories);\n\t\t} else {\n\t\t\tsetExpanded([]);\n\t\t}\n\t};\n\n\tconst generateRandomName = (extensionRequired) => {\n\t\tconst randomString = Math.random().toString(36).substring(2, 8);\n\t\tconst extension = Math.random() < 0.5 ? \".txt\" : \".jsx\";\n\t\treturn `${extensionRequired ? randomString + extension : randomString}`;\n\t};\n\n\tconst getParentNode = (currentNode, name) => {\n\t\tif (!currentNode.children) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (const child of currentNode?.children) {\n\t\t\tif (child.name === name) {\n\t\t\t\treturn currentNode;\n\t\t\t} else {\n\t\t\t\tconst parentNode = getParentNode(child, name);\n\t\t\t\tif (parentNode) {\n\t\t\t\t\treturn parentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tconst findTargetDir = (nodes, newNode) => {\n\t\tnodes.children.forEach((node) => {\n\t\t\tif (node.name === selected && node.kind === \"directory\") {\n\t\t\t\tif (!node.children) {\n\t\t\t\t\tnode.children = [];\n\t\t\t\t}\n\t\t\t\treturn node?.children?.push(newNode);\n\t\t\t} else if (node.name !== selected && node.kind === \"directory\") {\n\t\t\t\tfindTargetDir(node, newNode);\n\t\t\t} else if (node.name === selected && node.kind === \"file\") {\n\t\t\t\tconst parentNode = getParentNode(nodes, selected);\n\t\t\t\tif (!parentNode.children) {\n\t\t\t\t\tparentNode.children = [];\n\t\t\t\t}\n\t\t\t\treturn parentNode?.children?.push(newNode);\n\t\t\t}\n\t\t});\n\t\treturn nodes;\n\t};\n\n\tconst addFolder = () => {\n\t\tconst newFolder = {\n\t\t\tname: generateRandomName(false),\n\t\t\tkind: \"directory\",\n\t\t\tchildren: [],\n\t\t};\n\t\tlet tree = repoTree;\n\t\tconst finalTree = findTargetDir(tree, newFolder);\n\t\tsetRepoTree(finalTree);\n\t};\n\n\tconst addFile = () => {\n\t\tconst newFile = {\n\t\t\tname: generateRandomName(true),\n\t\t\tkind: \"file\",\n\t\t\tmodified: Date.now().toLocaleString(),\n\t\t\tsize: \"1KB\",\n\t\t};\n\t\tlet tree = repoTree;\n\t\tconst finalTree = findTargetDir(tree, newFile);\n\t\tsetRepoTree(finalTree);\n\t};\n\n\treturn (\n\t\t<div className=\"text-gray-200 w-full\">\n\t\t\t<div className=\"p-2\">\n\t\t\t\t<p className=\"text-xl cursor-pointer\" onClick={() => router.push(\"/\")}>\n\t\t\t\t\tRepository\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"flex justify-between items-center p-4 border-t border-b border-gray-800\">\n\t\t\t\t<p>Ignite Assignment</p>\n\t\t\t\t<div className=\"flex justify-evenly items-center\">\n\t\t\t\t\t<Tooltip title=\"Add file\">\n\t\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t\t<AiFillFileAdd\n\t\t\t\t\t\t\t\tsize={18}\n\t\t\t\t\t\t\t\tcolor={colors.trueGray[400]}\n\t\t\t\t\t\t\t\tonClick={addFile}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t\t<Tooltip title=\"Add folder\">\n\t\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t\t<AiFillFolderAdd\n\t\t\t\t\t\t\t\tsize={18}\n\t\t\t\t\t\t\t\tcolor={colors.trueGray[400]}\n\t\t\t\t\t\t\t\tonClick={addFolder}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t\t<Tooltip title={expanded.length === 0 ? \"Expand\" : \"Collapse\"}>\n\t\t\t\t\t\t<div onClick={handleExpandClick}>\n\t\t\t\t\t\t\t{expanded.length === 0 ? <ExpandIcon /> : <CollapseIcon />}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"p-4\">\n\t\t\t\t<DirectoryTree repoTree={repoTree} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default DirectoryView;\n\nexport const useStyles = makeStyles(() => ({\n\tfolderItem: {\n\t\t\"& .css-1kylpgj-MuiTreeItem-content.Mui-selected:hover\": {\n\t\t\tbackgroundColor: colors.gray[800],\n\t\t},\n\t\t\"& .css-1kylpgj-MuiTreeItem-content.Mui-selected\": {\n\t\t\tbackgroundColor: colors.gray[800],\n\t\t},\n\t},\n\tdirectoryTree: {},\n}));\n"]},"metadata":{},"sourceType":"module"}